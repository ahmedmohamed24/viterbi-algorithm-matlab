%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%           Generated by MATLAB 9.4 and Fixed-Point Designer 6.1           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function out = ConEncoder_fixpt(in, size)
    fm = get_fimath();

    constraintLength = fi(7, 0, 3, 0, fm);
    out = fi(zeros(1, 20), 0, 1, 0, fm);
%     out = zeros(1, size*2);

    currentState = fi(zeros(1, fi_toint(fi_signed(constraintLength) - fi(1, 0, 1, 0, fm))), 0, 1, 0, fm);
%     currentState = zeros(1, 6);
    %     while (index <= size)
    for index = fi(1, 0, 1, 0, fm):size
        out(1, index * fi(2, 0, 2, 0, fm) - fi(1, 0, 1, 0, fm)) = fi_bitxor(in(1, index), fi_bitxor(currentState(1, 1), fi_bitxor(currentState(1, 2), fi_bitxor(currentState(1, 3), currentState(1, 6)))));
        out(1, index * fi(2, 0, 2, 0, fm)) = fi_bitxor(in(1, index), fi_bitxor(currentState(1, 2), fi_bitxor(currentState(1, 3), fi_bitxor(currentState(1, 5), currentState(1, 6)))));
        currentState(:) = [fi(in(1, index), 0, 1, 0, fm) currentState(1, 1:5)];
    end

end



function y = fi_bitxor(a,b)
    coder.inline( 'always' );
    if isfi( a ) && ~isfi( b )
        y = bitxor( a, fi( b, numerictype( a ), fimath( a ) ) );
    elseif ~isfi( a ) && isfi( b )
        y = bitxor( fi( a, numerictype( b ), fimath( b ) ), b );
    elseif isfi( a ) && isfi( b )
        unionType = fixed.aggregateType( a, b );
        y = bitxor( fi( a, unionType, fimath( a ) ), fi( b, unionType, fimath( b ) ) );
    else
        y = bitxor( uint32( a ), uint32( b ) );
    end
end


function y = fi_signed(a)
    coder.inline( 'always' );
    if isfi( a ) && ~(issigned( a ))
        nt = numerictype( a );
        new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
        y = fi( a, new_nt, fimath( a ) );
    else
        y = a;
    end
end


function y = fi_toint(u)
    coder.inline( 'always' );
    if isfi( u )
        nt = numerictype( u );
        s = nt.SignednessBool;
        wl = nt.WordLength;
        y = int32( fi( u, s, wl, 0, hdlfimath ) );
    else
        y = int32( u );
    end
end

function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
